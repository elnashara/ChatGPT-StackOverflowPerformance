function_index,prompt,sample_index,code_segment,Size,Min,Average,Max,Exception
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,"['def funcImp(lst):\n    counts = {}\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    duplicates = []\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",1000,0.0049912999384105206,0.005294928983785212,0.005619399948045611,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,"['def funcImp(lst):\n    counts = {}\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    duplicates = []\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",2000,0.010232799919322133,0.01092635199893266,0.01178340008482337,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,"['def funcImp(lst):\n    counts = {}\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    duplicates = []\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",5000,0.027137800119817257,0.028381189024075867,0.03654829994775355,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,['def funcImp(lst):\n    dup_set = set()\n    dup_lst = []\n    for num in lst:\n        if lst.count(num) > 1:\n            dup_set.add(num)\n            dup_lst.append(num)\n    return dup_lst'],1000,0.40145170013420284,0.4144871130003594,0.4270996998529881,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,['def funcImp(lst):\n    dup_set = set()\n    dup_lst = []\n    for num in lst:\n        if lst.count(num) > 1:\n            dup_set.add(num)\n            dup_lst.append(num)\n    return dup_lst'],2000,1.6419391999952495,1.657862914002035,1.6849859999492764,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,['def funcImp(lst):\n    dup_set = set()\n    dup_lst = []\n    for num in lst:\n        if lst.count(num) > 1:\n            dup_set.add(num)\n            dup_lst.append(num)\n    return dup_lst'],5000,10.272044399986044,10.35593463999685,10.435369400074705,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,"['def funcImp(lst):\n    freq = {}\n    result = []\n    for num in lst:\n        freq[num] = freq.get(num, 0) + 1\n    for num, count in freq.items():\n        if count > 1:\n            result.append(num)\n    return result']",1000,0.005571799818426371,0.005926729997154326,0.006571199977770448,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,"['def funcImp(lst):\n    freq = {}\n    result = []\n    for num in lst:\n        freq[num] = freq.get(num, 0) + 1\n    for num, count in freq.items():\n        if count > 1:\n            result.append(num)\n    return result']",2000,0.011392200132831931,0.011927011008374393,0.012453899951651692,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,"['def funcImp(lst):\n    freq = {}\n    result = []\n    for num in lst:\n        freq[num] = freq.get(num, 0) + 1\n    for num, count in freq.items():\n        if count > 1:\n            result.append(num)\n    return result']",5000,0.029194399947300553,0.03024395300541073,0.033366700168699026,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for x in lst:\n        if x in seen:\n            duplicates.add(x)\n        else:\n            seen.add(x)\n    return list(duplicates)'],1000,0.0033150999806821346,0.0034845040016807617,0.0038253001403063536,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for x in lst:\n        if x in seen:\n            duplicates.add(x)\n        else:\n            seen.add(x)\n    return list(duplicates)'],2000,0.007425500079989433,0.008044023006223143,0.008498500101268291,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for x in lst:\n        if x in seen:\n            duplicates.add(x)\n        else:\n            seen.add(x)\n    return list(duplicates)'],5000,0.024297599913552403,0.026915481993928552,0.0376655999571085,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,['def funcImp(lst):\n    count_dict = {}\n    for x in lst:\n        if x in count_dict:\n            count_dict[x] += 1\n        else:\n            count_dict[x] = 1\n    duplicates = [x for x in count_dict if count_dict[x] > 1]\n    return duplicates'],1000,0.005883699981495738,0.006121213000733405,0.006696099881082773,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,['def funcImp(lst):\n    count_dict = {}\n    for x in lst:\n        if x in count_dict:\n            count_dict[x] += 1\n        else:\n            count_dict[x] = 1\n    duplicates = [x for x in count_dict if count_dict[x] > 1]\n    return duplicates'],2000,0.0119739999063313,0.012482924009673298,0.012945900205522776,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,['def funcImp(lst):\n    count_dict = {}\n    for x in lst:\n        if x in count_dict:\n            count_dict[x] += 1\n        else:\n            count_dict[x] = 1\n    duplicates = [x for x in count_dict if count_dict[x] > 1]\n    return duplicates'],5000,0.03199089993722737,0.03300230199471116,0.035807699896395206,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,['def funcImp(lst):\n    freq = {}\n    duplicates = []\n    for elem in lst:\n        if elem in freq:\n            freq[elem] += 1\n            if freq[elem] == 2:\n                duplicates.append(elem)\n        else:\n            freq[elem] = 1\n    return duplicates'],1000,0.0037674999330192804,0.004028124979231507,0.004709700122475624,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,['def funcImp(lst):\n    freq = {}\n    duplicates = []\n    for elem in lst:\n        if elem in freq:\n            freq[elem] += 1\n            if freq[elem] == 2:\n                duplicates.append(elem)\n        else:\n            freq[elem] = 1\n    return duplicates'],2000,0.007775100180879235,0.00819642399204895,0.010131500195711851,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,['def funcImp(lst):\n    freq = {}\n    duplicates = []\n    for elem in lst:\n        if elem in freq:\n            freq[elem] += 1\n            if freq[elem] == 2:\n                duplicates.append(elem)\n        else:\n            freq[elem] = 1\n    return duplicates'],5000,0.02019719989039004,0.02081755398772657,0.022189399925991893,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for val in lst:\n        if val in seen:\n            duplicates.add(val)\n        else:\n            seen.add(val)\n    return list(duplicates)'],1000,0.0032868001144379377,0.0034626020072028043,0.0039490999188274145,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for val in lst:\n        if val in seen:\n            duplicates.add(val)\n        else:\n            seen.add(val)\n    return list(duplicates)'],2000,0.007586099905893207,0.00800951899960637,0.010671399999409914,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for val in lst:\n        if val in seen:\n            duplicates.add(val)\n        else:\n            seen.add(val)\n    return list(duplicates)'],5000,0.024186499882489443,0.026393551996443422,0.02814449998550117,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,['def funcImp(nums):\n    freq = {}\n    output = []\n    for num in nums:\n        if num in freq:\n            freq[num] += 1\n            if freq[num] == 2:\n                output.append(num)\n        else:\n            freq[num] = 1\n    return output'],1000,0.003769399831071496,0.004002552009187639,0.004413800081238151,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,['def funcImp(nums):\n    freq = {}\n    output = []\n    for num in nums:\n        if num in freq:\n            freq[num] += 1\n            if freq[num] == 2:\n                output.append(num)\n        else:\n            freq[num] = 1\n    return output'],2000,0.007744099944829941,0.0082172459946014,0.011642999947071075,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,['def funcImp(nums):\n    freq = {}\n    output = []\n    for num in nums:\n        if num in freq:\n            freq[num] += 1\n            if freq[num] == 2:\n                output.append(num)\n        else:\n            freq[num] = 1\n    return output'],5000,0.020255199866369367,0.020942809996195137,0.027919699903577566,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,['def funcImp(lst):\n    freq_dict = {}\n    duplicates_lst = []\n    for num in lst:\n        if num in freq_dict:\n            freq_dict[num] += 1\n            if freq_dict[num] == 2:\n                duplicates_lst.append(num)\n        else:\n            freq_dict[num] = 1\n    return duplicates_lst'],1000,0.003785999957472086,0.003980837990529835,0.004342800006270409,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,['def funcImp(lst):\n    freq_dict = {}\n    duplicates_lst = []\n    for num in lst:\n        if num in freq_dict:\n            freq_dict[num] += 1\n            if freq_dict[num] == 2:\n                duplicates_lst.append(num)\n        else:\n            freq_dict[num] = 1\n    return duplicates_lst'],2000,0.007843400118872523,0.008281401002313941,0.010930599877610803,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,['def funcImp(lst):\n    freq_dict = {}\n    duplicates_lst = []\n    for num in lst:\n        if num in freq_dict:\n            freq_dict[num] += 1\n            if freq_dict[num] == 2:\n                duplicates_lst.append(num)\n        else:\n            freq_dict[num] = 1\n    return duplicates_lst'],5000,0.019971600035205483,0.020793686020188034,0.02162100002169609,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,"['def funcImp(input_list):\n    counts = {}\n    for num in input_list:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    duplicates = []\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",1000,0.005152800120413303,0.005400200001895427,0.005754400044679642,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,"['def funcImp(input_list):\n    counts = {}\n    for num in input_list:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    duplicates = []\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",2000,0.01054330007173121,0.010968739986419678,0.011606200132519007,N/A
0_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,"['def funcImp(input_list):\n    counts = {}\n    for num in input_list:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    duplicates = []\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",5000,0.027067699935287237,0.028032172007951887,0.03567710006609559,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,"['def funcImp(lst):\n    freq = {}\n    duplicates = []\n    for num in lst:\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    for num, count in freq.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",1000,0.005145099945366383,0.005407390978652984,0.005857500014826655,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,"['def funcImp(lst):\n    freq = {}\n    duplicates = []\n    for num in lst:\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    for num, count in freq.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",2000,0.010536100016906857,0.01098125300137326,0.011631000088527799,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,"['def funcImp(lst):\n    freq = {}\n    duplicates = []\n    for num in lst:\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    for num, count in freq.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",5000,0.027016300009563565,0.027955067991279066,0.03273319988511503,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,"['def funcImp(lst):\n    counts = {}\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    duplicates = []\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",1000,0.005195599980652332,0.005429919008165598,0.006015100050717592,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,"['def funcImp(lst):\n    counts = {}\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    duplicates = []\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",2000,0.01053109997883439,0.011022307996172457,0.012070500059053302,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,"['def funcImp(lst):\n    counts = {}\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    duplicates = []\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",5000,0.027083899825811386,0.027956239990890027,0.032381999772042036,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,['def funcImpl2(lst):\n    duplicates = []\n    count = {}\n    for item in lst:\n        if item in count:\n            count[item] += 1\n            if count[item] == 2:\n                duplicates.append(item)\n        else:\n            count[item] = 1\n    return duplicates'],1000,0.0051506999880075455,0.005454920991323889,0.006612700177356601,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,['def funcImpl2(lst):\n    duplicates = []\n    count = {}\n    for item in lst:\n        if item in count:\n            count[item] += 1\n            if count[item] == 2:\n                duplicates.append(item)\n        else:\n            count[item] = 1\n    return duplicates'],2000,0.010538899805396795,0.011003454006277025,0.012354099890217185,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,['def funcImpl2(lst):\n    duplicates = []\n    count = {}\n    for item in lst:\n        if item in count:\n            count[item] += 1\n            if count[item] == 2:\n                duplicates.append(item)\n        else:\n            count[item] = 1\n    return duplicates'],5000,0.026722699869424105,0.028027402996085585,0.03361079981550574,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(lst):\n    count_dict = {}\n    duplicates = []\n    for val in lst:\n        if val in count_dict:\n            count_dict[val] += 1\n        else:\n            count_dict[val] = 1\n    for key in count_dict:\n        if count_dict[key] > 1:\n            duplicates.append(key)\n    return duplicates'],1000,0.0057322001084685326,0.006372142005711794,0.011349600041285157,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(lst):\n    count_dict = {}\n    duplicates = []\n    for val in lst:\n        if val in count_dict:\n            count_dict[val] += 1\n        else:\n            count_dict[val] = 1\n    for key in count_dict:\n        if count_dict[key] > 1:\n            duplicates.append(key)\n    return duplicates'],2000,0.011882699793204665,0.012366300988942385,0.016851400025188923,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(lst):\n    count_dict = {}\n    duplicates = []\n    for val in lst:\n        if val in count_dict:\n            count_dict[val] += 1\n        else:\n            count_dict[val] = 1\n    for key in count_dict:\n        if count_dict[key] > 1:\n            duplicates.append(key)\n    return duplicates'],5000,0.03180209989659488,0.03266140099382028,0.037934100022539496,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,"['def funcImp(lst):\n    count = {}\n    for num in lst:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    duplicates = []\n    for num, freq in count.items():\n        if freq > 1:\n            duplicates.append(num)\n    return duplicates']",1000,0.0051623000763356686,0.005407115006819368,0.006276899948716164,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,"['def funcImp(lst):\n    count = {}\n    for num in lst:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    duplicates = []\n    for num, freq in count.items():\n        if freq > 1:\n            duplicates.append(num)\n    return duplicates']",2000,0.010613400023430586,0.011037363994400948,0.01250889990478754,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,"['def funcImp(lst):\n    count = {}\n    for num in lst:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    duplicates = []\n    for num, freq in count.items():\n        if freq > 1:\n            duplicates.append(num)\n    return duplicates']",5000,0.02691480005159974,0.027986774982418864,0.033450699876993895,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,['def funcImp(lst):\n    freq = {}\n    result = []\n    for elem in lst:\n        if elem in freq:\n            freq[elem] += 1\n            if freq[elem] == 2:\n                result.append(elem)\n        else:\n            freq[elem] = 1\n    return result'],1000,0.003804599866271019,0.00402822598349303,0.005438199965283275,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,['def funcImp(lst):\n    freq = {}\n    result = []\n    for elem in lst:\n        if elem in freq:\n            freq[elem] += 1\n            if freq[elem] == 2:\n                result.append(elem)\n        else:\n            freq[elem] = 1\n    return result'],2000,0.007681200047954917,0.008229265983682127,0.010515899863094091,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,['def funcImp(lst):\n    freq = {}\n    result = []\n    for elem in lst:\n        if elem in freq:\n            freq[elem] += 1\n            if freq[elem] == 2:\n                result.append(elem)\n        else:\n            freq[elem] = 1\n    return result'],5000,0.020110799930989742,0.020977025998290627,0.027114399941638112,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,['def funcImp(lst):\n    counts = {}\n    duplicates = []\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n            if counts[num] == 2:\n                duplicates.append(num)\n        else:\n            counts[num] = 1\n    return duplicates'],1000,0.003778700018301606,0.004014956997707486,0.0051525000017136335,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,['def funcImp(lst):\n    counts = {}\n    duplicates = []\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n            if counts[num] == 2:\n                duplicates.append(num)\n        else:\n            counts[num] = 1\n    return duplicates'],2000,0.007737200008705258,0.008197011009324342,0.010151599999517202,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,['def funcImp(lst):\n    counts = {}\n    duplicates = []\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n            if counts[num] == 2:\n                duplicates.append(num)\n        else:\n            counts[num] = 1\n    return duplicates'],5000,0.019953199895098805,0.020861460994929075,0.02443970018066466,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,"['def funcImp(lst):\n    freq_map = {}\n    for num in lst:\n        freq_map[num] = freq_map.get(num, 0) + 1\n    duplicates = [num for num, freq in freq_map.items() if freq > 1]\n    return duplicates']",1000,0.005543499952182174,0.00582362599670887,0.00623759999871254,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,"['def funcImp(lst):\n    freq_map = {}\n    for num in lst:\n        freq_map[num] = freq_map.get(num, 0) + 1\n    duplicates = [num for num, freq in freq_map.items() if freq > 1]\n    return duplicates']",2000,0.011093599954620004,0.011817160996142774,0.015680799959227443,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,"['def funcImp(lst):\n    freq_map = {}\n    for num in lst:\n        freq_map[num] = freq_map.get(num, 0) + 1\n    duplicates = [num for num, freq in freq_map.items() if freq > 1]\n    return duplicates']",5000,0.028619399992749095,0.029740376987028867,0.03643990005366504,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,['def funcImp(lst):\n    seen = set()\n    duplicates = []\n    for num in lst:\n        if num in seen:\n            duplicates.append(num)\n        else:\n            seen.add(num)\n    return duplicates'],1000,0.003322900040075183,0.0035618730215355755,0.0061460998840630054,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,['def funcImp(lst):\n    seen = set()\n    duplicates = []\n    for num in lst:\n        if num in seen:\n            duplicates.append(num)\n        else:\n            seen.add(num)\n    return duplicates'],2000,0.007541599916294217,0.008051067991182208,0.012604699935764074,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,['def funcImp(lst):\n    seen = set()\n    duplicates = []\n    for num in lst:\n        if num in seen:\n            duplicates.append(num)\n        else:\n            seen.add(num)\n    return duplicates'],5000,0.024100600043311715,0.026233233998063953,0.03187349997460842,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,"['def funcImp(lst):\n    """"""\n    Finds duplicates in a list and returns a new list with the duplicates.\n    """"""\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)']",1000,0.003299799980595708,0.0034630739944987,0.0038798998575657606,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,"['def funcImp(lst):\n    """"""\n    Finds duplicates in a list and returns a new list with the duplicates.\n    """"""\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)']",2000,0.007343800039961934,0.007982938000932336,0.009996999986469746,N/A
1_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be fast as the size of the list grows. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,"['def funcImp(lst):\n    """"""\n    Finds duplicates in a list and returns a new list with the duplicates.\n    """"""\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)']",5000,0.02381359995342791,0.02615901000332087,0.028340900084003806,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,['def funcImp(lst):\n    duplicates = []\n    for i in range(len(lst)):\n        if lst[i] in lst[i + 1:] and lst[i] not in duplicates:\n            duplicates.append(lst[i])\n    return duplicates'],1000,0.20633489987812936,0.21851979298982768,0.22775320010259748,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,['def funcImp(lst):\n    duplicates = []\n    for i in range(len(lst)):\n        if lst[i] in lst[i + 1:] and lst[i] not in duplicates:\n            duplicates.append(lst[i])\n    return duplicates'],2000,0.8751922999508679,0.8966750539885834,0.9247245001606643,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,['def funcImp(lst):\n    duplicates = []\n    for i in range(len(lst)):\n        if lst[i] in lst[i + 1:] and lst[i] not in duplicates:\n            duplicates.append(lst[i])\n    return duplicates'],5000,5.814042299985886,5.899772161992733,5.977045000065118,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],1000,0.0033162999898195267,0.0035002029966562987,0.004902400076389313,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],2000,0.007445299997925758,0.008024736014194787,0.010721500031650066,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],5000,0.023866100003942847,0.025609655007719993,0.03164960001595318,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],1000,0.00330799981020391,0.003481948005501181,0.004262599861249328,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],2000,0.0072033999022096395,0.007928029987961055,0.008492299821227789,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],5000,0.024052900029346347,0.02532298697391525,0.02793880016542971,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(lst):\n    duplicates = []\n    for item in set(lst):\n        if lst.count(item) > 1:\n            duplicates.append(item)\n    return duplicates'],1000,0.413304700050503,0.4181460449937731,0.4389910001773387,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(lst):\n    duplicates = []\n    for item in set(lst):\n        if lst.count(item) > 1:\n            duplicates.append(item)\n    return duplicates'],2000,1.6418338001240045,1.6619900409760886,1.695123900193721,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(lst):\n    duplicates = []\n    for item in set(lst):\n        if lst.count(item) > 1:\n            duplicates.append(item)\n    return duplicates'],5000,10.266927599906921,10.346551013984717,10.460380600066856,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,['def funcImp(lst):\n    duplicates = []\n    for i in lst:\n        if lst.count(i) > 1 and i not in duplicates:\n            duplicates.append(i)\n    return duplicates'],1000,0.4098314999137074,0.4153393340203911,0.43032429995946586,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,['def funcImp(lst):\n    duplicates = []\n    for i in lst:\n        if lst.count(i) > 1 and i not in duplicates:\n            duplicates.append(i)\n    return duplicates'],2000,1.639283699914813,1.6514845630060881,1.6943109000567347,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,['def funcImp(lst):\n    duplicates = []\n    for i in lst:\n        if lst.count(i) > 1 and i not in duplicates:\n            duplicates.append(i)\n    return duplicates'],5000,10.24093100009486,10.32926957999356,10.432814300060272,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,"['def funcImp(lst):\n    counts = {}\n    duplicates = []\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",1000,0.005161200184375048,0.0054422800079919394,0.006258200155571103,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,"['def funcImp(lst):\n    counts = {}\n    duplicates = []\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",2000,0.010438499972224236,0.010945483993273228,0.0117873998824507,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,"['def funcImp(lst):\n    counts = {}\n    duplicates = []\n    for num in lst:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",5000,0.026968799997121096,0.02789079900132492,0.03359799995087087,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,['def funcImp(lst):\n    duplicates = []\n    for item in set(lst):\n        if lst.count(item) > 1:\n            duplicates.append(item)\n    return duplicates'],1000,0.41337470011785626,0.4187221669894643,0.4761020001024008,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,['def funcImp(lst):\n    duplicates = []\n    for item in set(lst):\n        if lst.count(item) > 1:\n            duplicates.append(item)\n    return duplicates'],2000,1.652637500083074,1.6688122270139865,1.7161136998329312,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,['def funcImp(lst):\n    duplicates = []\n    for item in set(lst):\n        if lst.count(item) > 1:\n            duplicates.append(item)\n    return duplicates'],5000,10.178123800083995,10.358257044984493,10.800618899986148,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],1000,0.003318999893963337,0.0034477720013819635,0.003906900063157082,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],2000,0.007466000039130449,0.007859355004038662,0.008505700156092644,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],5000,0.02355149993672967,0.024723883017431943,0.02627769997343421,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,"['def funcImp(lst):\n    count = {}\n    duplicates = []\n    for i in lst:\n        count[i] = count.get(i, 0) + 1\n    for i in count:\n        if count[i] > 1:\n            duplicates.append(i)\n    return duplicates']",1000,0.006130200112238526,0.0064352689986117186,0.006994500057771802,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,"['def funcImp(lst):\n    count = {}\n    duplicates = []\n    for i in lst:\n        count[i] = count.get(i, 0) + 1\n    for i in count:\n        if count[i] > 1:\n            duplicates.append(i)\n    return duplicates']",2000,0.012568500125780702,0.013170096992980688,0.013848500093445182,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,"['def funcImp(lst):\n    count = {}\n    duplicates = []\n    for i in lst:\n        count[i] = count.get(i, 0) + 1\n    for i in count:\n        if count[i] > 1:\n            duplicates.append(i)\n    return duplicates']",5000,0.033027700148522854,0.03408455501543358,0.03549739997833967,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,['def funcImp(lst):\n    duplicates = []\n    for val in lst:\n        if lst.count(val) > 1 and val not in duplicates:\n            duplicates.append(val)\n    return duplicates'],1000,0.4086205998901278,0.4120346700074151,0.4169884999282658,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,['def funcImp(lst):\n    duplicates = []\n    for val in lst:\n        if lst.count(val) > 1 and val not in duplicates:\n            duplicates.append(val)\n    return duplicates'],2000,1.6022451999597251,1.6325548839988187,1.6647927998565137,N/A
2_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,['def funcImp(lst):\n    duplicates = []\n    for val in lst:\n        if lst.count(val) > 1 and val not in duplicates:\n            duplicates.append(val)\n    return duplicates'],5000,10.141908100107685,10.303781615986955,11.090455400059,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,['def funcImp(lst):\n    duplicates = set()\n    seen = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],1000,0.003202900057658553,0.003433332012500614,0.003950699931010604,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,['def funcImp(lst):\n    duplicates = set()\n    seen = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],2000,0.0075888000428676605,0.007952515000943095,0.009179600048810244,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",1,['def funcImp(lst):\n    duplicates = set()\n    seen = set()\n    for num in lst:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],5000,0.02354270010255277,0.025089322994463144,0.030730699887499213,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,['def funcImp(lst):\n    duplicates = []\n    seen = set()\n    for num in lst:\n        if num in seen:\n            duplicates.append(num)\n        else:\n            seen.add(num)\n    return duplicates'],1000,0.0031874999403953552,0.003421987995970994,0.004279999993741512,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,['def funcImp(lst):\n    duplicates = []\n    seen = set()\n    for num in lst:\n        if num in seen:\n            duplicates.append(num)\n        else:\n            seen.add(num)\n    return duplicates'],2000,0.007243399973958731,0.007721268995665014,0.008514800108969212,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",2,['def funcImp(lst):\n    duplicates = []\n    seen = set()\n    for num in lst:\n        if num in seen:\n            duplicates.append(num)\n        else:\n            seen.add(num)\n    return duplicates'],5000,0.022715900093317032,0.024507589018903674,0.027680300176143646,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,['def funcImp(lst):\n    seen = set()\n    duplicates = set((x for x in lst if x in seen or seen.add(x)))\n    return list(duplicates)'],1000,0.0032378998585045338,0.0034443920222111046,0.004085400141775608,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,['def funcImp(lst):\n    seen = set()\n    duplicates = set((x for x in lst if x in seen or seen.add(x)))\n    return list(duplicates)'],2000,0.007329999934881926,0.007734629991464317,0.009108900092542171,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",3,['def funcImp(lst):\n    seen = set()\n    duplicates = set((x for x in lst if x in seen or seen.add(x)))\n    return list(duplicates)'],5000,0.023722099838778377,0.024891922993119805,0.028738999972119927,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(nums):\n    seen = set()\n    duplicates = set()\n    for num in nums:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],1000,0.0032063000835478306,0.003441918003372848,0.004814299987629056,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(nums):\n    seen = set()\n    duplicates = set()\n    for num in nums:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],2000,0.007194400066509843,0.007784210001118481,0.00973679986782372,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",4,['def funcImp(nums):\n    seen = set()\n    duplicates = set()\n    for num in nums:\n        if num in seen:\n            duplicates.add(num)\n        else:\n            seen.add(num)\n    return list(duplicates)'],5000,0.023707899963483214,0.02497200498357415,0.028402999974787235,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for i in lst:\n        if i in seen:\n            duplicates.add(i)\n        else:\n            seen.add(i)\n    return list(duplicates)'],1000,0.0032170999329537153,0.0033954230113886295,0.004157400224357843,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for i in lst:\n        if i in seen:\n            duplicates.add(i)\n        else:\n            seen.add(i)\n    return list(duplicates)'],2000,0.0072212000377476215,0.00800927699310705,0.014217199990525842,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",5,['def funcImp(lst):\n    seen = set()\n    duplicates = set()\n    for i in lst:\n        if i in seen:\n            duplicates.add(i)\n        else:\n            seen.add(i)\n    return list(duplicates)'],5000,0.023478900082409382,0.024810599994380025,0.032209099968895316,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,"['def funcImp(lst):\n    freq = {}\n    result = []\n    for num in lst:\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    for num, count in freq.items():\n        if count > 1:\n            result.append(num)\n    return result']",1000,0.004893000004813075,0.005288627992849797,0.006024000002071261,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,"['def funcImp(lst):\n    freq = {}\n    result = []\n    for num in lst:\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    for num, count in freq.items():\n        if count > 1:\n            result.append(num)\n    return result']",2000,0.010060100117698312,0.010736394997220487,0.013439900008961558,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",6,"['def funcImp(lst):\n    freq = {}\n    result = []\n    for num in lst:\n        if num in freq:\n            freq[num] += 1\n        else:\n            freq[num] = 1\n    for num, count in freq.items():\n        if count > 1:\n            result.append(num)\n    return result']",5000,0.02638279995881021,0.027462593987584116,0.03192959981970489,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,"['def funcImp(lst):\n    counts = {}\n    duplicates = []\n    for num in lst:\n        if num not in counts:\n            counts[num] = 1\n        else:\n            counts[num] += 1\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",1000,0.005067500052973628,0.005353198989760131,0.005929999984800816,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,"['def funcImp(lst):\n    counts = {}\n    duplicates = []\n    for num in lst:\n        if num not in counts:\n            counts[num] = 1\n        else:\n            counts[num] += 1\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",2000,0.010315699968487024,0.010928325981367379,0.015539400046691298,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",7,"['def funcImp(lst):\n    counts = {}\n    duplicates = []\n    for num in lst:\n        if num not in counts:\n            counts[num] = 1\n        else:\n            counts[num] += 1\n    for num, count in counts.items():\n        if count > 1:\n            duplicates.append(num)\n    return duplicates']",5000,0.026454599807038903,0.027520651009399443,0.031684899935498834,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,['def funcImp(lst):\n    duplicates = set()\n    unique = set()\n    for num in lst:\n        if num in unique:\n            duplicates.add(num)\n        else:\n            unique.add(num)\n    return list(duplicates)'],1000,0.0031755000818520784,0.0034061290021054447,0.0042796998750418425,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,['def funcImp(lst):\n    duplicates = set()\n    unique = set()\n    for num in lst:\n        if num in unique:\n            duplicates.add(num)\n        else:\n            unique.add(num)\n    return list(duplicates)'],2000,0.007316399831324816,0.00785053000319749,0.009552499977871776,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",8,['def funcImp(lst):\n    duplicates = set()\n    unique = set()\n    for num in lst:\n        if num in unique:\n            duplicates.add(num)\n        else:\n            unique.add(num)\n    return list(duplicates)'],5000,0.022887099999934435,0.024510604990646244,0.025918500032275915,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,"['from collections import Counter\n\ndef funcImp(lst):\n    counter = Counter(lst)\n    duplicates = [num for num, count in counter.items() if count > 1]\n    return duplicates']",1000,0.003600599942728877,0.00389583999523893,0.00444960012100637,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,"['from collections import Counter\n\ndef funcImp(lst):\n    counter = Counter(lst)\n    duplicates = [num for num, count in counter.items() if count > 1]\n    return duplicates']",2000,0.007397300098091364,0.008016381994821131,0.014743800042197108,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",9,"['from collections import Counter\n\ndef funcImp(lst):\n    counter = Counter(lst)\n    duplicates = [num for num, count in counter.items() if count > 1]\n    return duplicates']",5000,0.019642400089651346,0.020328091997653244,0.02233529998920858,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,['def funcImp(lst):\n    seen = set()\n    duplicates = []\n    for num in lst:\n        if num in seen:\n            duplicates.append(num)\n        else:\n            seen.add(num)\n    return duplicates'],1000,0.003189000068232417,0.0033958190004341306,0.0038676001131534576,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,['def funcImp(lst):\n    seen = set()\n    duplicates = []\n    for num in lst:\n        if num in seen:\n            duplicates.append(num)\n        else:\n            seen.add(num)\n    return duplicates'],2000,0.007254100171849132,0.00787237700074911,0.0115728999953717,N/A
3_p5_auto_find_duplicates_list_strategy,"""How do I find the duplicates in a list and create another list with them? The implementation should have the most optimal time complexity possible. The implementation should be in a function named funcImp that takes a single list of integers as a parameter.""",10,['def funcImp(lst):\n    seen = set()\n    duplicates = []\n    for num in lst:\n        if num in seen:\n            duplicates.append(num)\n        else:\n            seen.add(num)\n    return duplicates'],5000,0.023334199795499444,0.02475406799465418,0.026535799959674478,N/A
